/*
baekjoon 5639��: ���� �˻� Ʈ��

�ð� ����: 1��
�޸� ����: 256 MB

����
���� �˻� Ʈ���� ������ ���� �� ���� ������ �����ϴ� ���� Ʈ���̴�.
����� ���� ����Ʈ���� �ִ� ��� ����� Ű�� ����� Ű���� �۴�.
����� ������ ����Ʈ���� �ִ� ��� ����� Ű�� ����� Ű���� ũ��.
����, ������ ����Ʈ���� ���� �˻� Ʈ���̴�.
���� ��ȸ (��Ʈ-����-������)�� ��Ʈ�� �湮�ϰ�, ���� ����Ʈ��, ������ ���� Ʈ���� ������� �湮�ϸ鼭 ����� Ű�� ����Ѵ�. ���� ��ȸ (����-������-��Ʈ)�� ���� ����Ʈ��, ������ ����Ʈ��, ��Ʈ ��� ������� Ű�� ����Ѵ�. ���� ���, ���� ���� �˻� Ʈ���� ���� ��ȸ ����� 50 30 24 5 28 45 98 52 60 �̰�, ���� ��ȸ ����� 5 28 24 45 30 60 52 98 50 �̴�.
���� �˻� Ʈ���� ���� ��ȸ�� ����� �־����� ��, �� Ʈ���� ���� ��ȸ�� ����� ���ϴ� ���α׷��� �ۼ��Ͻÿ�.

�Է�
Ʈ���� ���� ��ȸ�� ����� �־�����. ��忡 ����ִ� Ű�� ���� 106���� ���� ���� �����̴�. ��� ���� �� �ٿ� �ϳ��� �־�����, ����� ���� 10,000�� �����̴�. ���� Ű�� ������ ���� ����.

���
�Է����� �־��� ���� �˻� Ʈ���� ���� ��ȸ�� ����� �� �ٿ� �ϳ��� ����Ѵ�.
*/

#define _CRT_SECURE_NO_WARNINGS

#include <iostream>
#include <cstdio>

using namespace std;

struct _node
{
	int value;
	_node* left;
	_node* right;

	_node() :left(NULL), right(NULL), value(0) {}
};

_node tree[10000];

void post_order(_node * root)
{
	if (root == NULL)
	{
		return;
	}

	post_order(root->left);
	post_order(root->right);
	printf("%d\n", root->value);
}

void insert(int idx)
{
	_node* p = &tree[0];
	_node* r = NULL;
	while (p != NULL)
	{
		r = p; //r�� p�� �θ���
		if (tree[idx].value < p->value)
			p = p->left;
		else
			p = p->right;
	}

	if (tree[idx].value > r->value)
		r->right = &tree[idx];
	else
		r->left = &tree[idx];
}

int main(void)
{
	int cnt;
	for (cnt = 0; scanf("%d", &tree[cnt].value) != EOF; cnt++); //��� �Է¹����� �𸣹Ƿ� �̷� ���·� �Է¹ޱ�

	//tree[0]�� ��Ʈ ���
	for (int i = 1; i < cnt; i++)
	{
		insert(i);
	}

	post_order(&tree[0]);
}

/*
���� �˻� Ʈ���� ���� ��ȸ�� ����� �־����� ��, �� Ʈ���� ���� ��ȸ�� ����� ���ϱ�
��͸� Ȱ���ؼ�
���� ��ȸ�� ���� Ʈ���� �����, ���� ��ȸ ����Լ��� ���� ���
1. ���� �Է� �޾� node ����ü �迭�� ����
2. node �迭���� ���� �˻� Ʈ���� Ư¡�� ���� �����ͷ� �̾��ֱ�
3. ���� ��ȸ ����Լ� ����
4. ���� ��ȸ ����Լ��� ���� Ʈ���� ���
	
*/
