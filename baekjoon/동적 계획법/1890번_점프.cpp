/*
baekjoon 1890��: ����

�ð� ����: 1��
�޸� ����: 128 MB

����
N��N �����ǿ� ���� ������ �ִ�. �� ������ ��ǥ�� ���� ���� �� ĭ���� ���� ������ �Ʒ� ĭ���� ��Ģ�� �°� ������ �ؼ� ���� ���̴�.
�� ĭ�� �����ִ� ���� ���� ĭ���� �� �� �ִ� �Ÿ��� �ǹ��Ѵ�. �ݵ�� �������̳� �Ʒ������θ� �̵��ؾ� �Ѵ�. 0�� �� �̻� ������ ���� �������̸�, �׻� ���� ĭ�� �����ִ� ����ŭ �������̳� �Ʒ��� ���� �Ѵ�. �� �� ������ �� ��, ������ �ٲٸ� �� �ȴ�. ��, �� ĭ���� ���������� ������ �ϰų�, �Ʒ��� ������ �ϴ� �� ��츸 �����Ѵ�.
���� ���� �� ĭ���� ���� ������ �Ʒ� ĭ���� ��Ģ�� �°� �̵��� �� �ִ� ����� ������ ���ϴ� ���α׷��� �ۼ��Ͻÿ�.

�Է�
ù° �ٿ� ���� ���� ũ�� N (4 �� N �� 100)�� �־�����. �� ���� N�� �ٿ��� �� ĭ�� ������ �ִ� ���� N���� �־�����. ĭ�� �����ִ� ���� 0���� ũ�ų� ����, 9���� �۰ų� ���� �����̸�, ���� ������ �Ʒ� ĭ���� �׻� 0�� �־�����.

���
���� ���� �� ĭ���� ���� ������ �Ʒ� ĭ���� ������ ��Ģ�� �°� �� �� �ִ� ����� ������ ����Ѵ�. ����� ������ 263-1���� �۰ų� ����. 
*/

#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef unsigned long long ull;

int n;
int arr[100][100];
ll dp[100][100];

ll cntPossible(int i, int j) {
	ll cnt = 0;
	int move = arr[i][j];
	
	if(i+move < n && dp[i+move][j] >= 1) {
		cnt += dp[i+move][j];
	}
	if(j+move < n && dp[i][j+move] >= 1) {
		cnt += dp[i][j+move];
	}
	
	return cnt;
}

int main(void) {
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);
	
	cin >> n;
	for(int i=0; i<n; i++) {
		for(int j=0; j<n; j++) {
			cin >> arr[i][j];
		}
	}
	
	for(int i=n-1; i>=0; i--) {
		for(int j=n-1; j>=0; j--) {
			if(i == n-1 && j == n-1) {
				dp[i][j] = 1;
			}		
			else {
				dp[i][j] = cntPossible(i,j);	
			}
		}
	}
	
	cout << dp[0][0];
}

/* 
*/
