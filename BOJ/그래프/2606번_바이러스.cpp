/*
BOJ 2606번: 바이러스

시간 제한: 1초
메모리 제한: 128 MB

문제
신종 바이러스인 웜 바이러스는 네트워크를 통해 전파된다. 한 컴퓨터가 웜 바이러스에 걸리면 그 컴퓨터와 네트워크 상에서 연결되어 있는 모든 컴퓨터는 웜 바이러스에 걸리게 된다.
예를 들어 7대의 컴퓨터가 <그림 1>과 같이 네트워크 상에서 연결되어 있다고 하자. 1번 컴퓨터가 웜 바이러스에 걸리면 웜 바이러스는 2번과 5번 컴퓨터를 거쳐 3번과 6번 컴퓨터까지 전파되어 2, 3, 5, 6 네 대의 컴퓨터는 웜 바이러스에 걸리게 된다. 하지만 4번과 7번 컴퓨터는 1번 컴퓨터와 네트워크상에서 연결되어 있지 않기 때문에 영향을 받지 않는다.
어느 날 1번 컴퓨터가 웜 바이러스에 걸렸다. 컴퓨터의 수와 네트워크 상에서 서로 연결되어 있는 정보가 주어질 때, 1번 컴퓨터를 통해 웜 바이러스에 걸리게 되는 컴퓨터의 수를 출력하는 프로그램을 작성하시오.

입력
첫째 줄에는 컴퓨터의 수가 주어진다. 컴퓨터의 수는 100 이하이고 각 컴퓨터에는 1번 부터 차례대로 번호가 매겨진다. 둘째 줄에는 네트워크 상에서 직접 연결되어 있는 컴퓨터 쌍의 수가 주어진다. 이어서 그 수만큼 한 줄에 한 쌍씩 네트워크 상에서 직접 연결되어 있는 컴퓨터의 번호 쌍이 주어진다.

출력
1번 컴퓨터가 웜 바이러스에 걸렸을 때, 1번 컴퓨터를 통해 웜 바이러스에 걸리게 되는 컴퓨터의 수를 첫째 줄에 출력한다. 
*/

//#define _CRT_SECURE_NO_WARNINGS

#include <iostream>

//#include <cstdio>

using namespace std;

int arr[101][101] = { 0, };
int visited[101] = { false, };
int n, m;
int a, b;
int cnt;

void dfs(int start)
{
	visited[start] = 1;
	cnt++;

	for (int i = 1; i <= n; i++)
	{
		if (arr[start][i] == 1 && !visited[i])
		{
			dfs(i);
		}
	}
}

int main(void)
{
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);

	cin >> n;
	cin >> m;
	for (int i = 0; i < m; i++)
	{
		cin >> a >> b;

		arr[a][b] = 1; arr[b][a] = 1;
	}

	dfs(1);

	cout << cnt - 1;
}

/*
1번 컴퓨터를 통해웜 바리어스에 걸리게 되는 컴퓨터의 수 출력
모든 정점을 확인해야 함 -> DFS

컴퓨터의 수 n 입력
직접 연결된 컴퓨터 쌍의 수 m 입력
한 쌍 씩 컴퓨터 연결 상태 입력, 인접 행렬로 그래프 구현

dfs로 1번에서 방문가능한 모든 정점 확인
	dfs 수행 후 행렬에서 visited = 1인 정점의 수 - 1 출력
 */
